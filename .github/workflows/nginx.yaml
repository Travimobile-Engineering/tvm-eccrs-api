name: Build and Push Travi Backend Image to Registry

on:
  push:
    branches: [ master, staging, dev ]

env:
  IMAGE_URI: "820242924853.dkr.ecr.eu-west-2.amazonaws.com/nginx-eccrs-service"

permissions:
  id-token: write
  contents: read

jobs:
  build-image:
    runs-on: ubuntu-latest
    name: 'Build and push docker image to Artifact Registry'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
        sudo dpkg -i trivy_0.18.3_Linux-64bit.deb

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::820242924853:role/github_actions_role20250624143236171300000001
        aws-region: eu-west-2

    - name: Authenticate to AWS ECR
      run: aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $IMAGE_URI

    - name: Extract short commit SHA
      id: vars
      run: echo "short_commit_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Determine tag
      id: tag
      run: |
        if [[ $GITHUB_REF == refs/heads/master ]]; then
          echo "tag=main" >> $GITHUB_ENV
        elif [[ $GITHUB_REF == refs/heads/staging ]]; then
          echo "tag=stg" >> $GITHUB_ENV
        elif [[ $GITHUB_REF == refs/heads/dev ]]; then
          echo "tag=dev" >> $GITHUB_ENV
        fi

    - name: Build Docker image
      run: docker build -f Dockerfile.nginx -t $IMAGE_URI:${{ env.tag }} .

    - name: Trivy image scan
      run: trivy image --exit-code 1 --format json --output trivy-results.json $IMAGE_URI:${{ env.tag }}

    - name: Install request package
      if: always()
      run: |
        python3 -m venv venv
        . venv/bin/activate
        pip install --upgrade pip
        pip install requests

    - name: Determine DefectDojo Engagement ID
      if: failure()
      id: ID
      run: |
        if [[ $GITHUB_REF == refs/heads/master ]]; then
          echo ID=11 >> $GITHUB_ENV
        elif [[ $GITHUB_REF == refs/heads/staging ]]; then
          echo ID=10 >> $GITHUB_ENV
        elif [[ $GITHUB_REF == refs/heads/dev ]]; then
          echo ID=9 >> $GITHUB_ENV
        fi

    - name: Upload to DefectDojo
      if: failure()
      env:
        DEFECT_DOJO_FILE: trivy-results.json
        DEFECT_DOJO_ENGAGEMENT: ${{ env.ID }}
        DEFECT_DOJO_API_TOKEN: ${{ secrets.DEFECT_DOJO_API_TOKEN }}
        DEFECT_DOJO_SCAN_TYPE: Trivy Scan
        DEFECT_DOJO_URL: https://defectdojo.travimobile.com/api/v2/import-scan/
        DEFECT_DOJO_PRODUCT_NAME: TVM-NGINX-ECCRS
      run: python upload-scan-report.py

    - name: Push Docker image to Artifact Registry
      run: docker push $IMAGE_URI:${{ env.tag }}

    - name: Notify Slack
      if: failure()
      uses: slackapi/slack-github-action@v2.1.0
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          text: "*GitHub Action build result*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\n*Triggered by*: @${{ github.actor }}\n*Branch*: ${{ 
              github.event.pull_request.head.ref ||    
              github.head_ref ||                             
              github.ref_name                          
            }}"
          blocks:
          - type: "section"
            text:
              type: "mrkdwn"
              text: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\n*Triggered by*: @${{ github.actor }}\n*Branch*: ${{ 
              github.event.pull_request.head.ref ||         
              github.head_ref ||                             
              github.ref_name                               
            }}"
